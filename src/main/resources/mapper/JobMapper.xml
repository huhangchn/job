<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wzu.job.dao.JobMapper">
  <resultMap id="BaseResultMap" type="com.wzu.job.bean.Job">
    <id column="job_id" jdbcType="INTEGER" property="jobId" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
    <result column="job_name" jdbcType="VARCHAR" property="jobName" />
    <result column="pub_time" jdbcType="TIMESTAMP" property="pubTime" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="salary" jdbcType="INTEGER" property="salary" />
    <result column="descr" jdbcType="VARCHAR" property="descr" />
    <result column="deadline" jdbcType="DATE" property="deadline" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="feedback" jdbcType="VARCHAR" property="feedback" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    job_id, company_id, job_name, pub_time, location, salary, descr, deadline, status, 
    feedback
  </sql>
  <select id="selectByExample" parameterType="com.wzu.job.bean.JobExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from job
    where job_id = #{jobId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from job
    where job_id = #{jobId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.wzu.job.bean.JobExample">
    delete from job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wzu.job.bean.Job">
    insert into job (job_id, company_id, job_name, 
      pub_time, location, salary, 
      descr, deadline, status, 
      feedback)
    values (#{jobId,jdbcType=INTEGER}, #{companyId,jdbcType=INTEGER}, #{jobName,jdbcType=VARCHAR}, 
      #{pubTime,jdbcType=TIMESTAMP}, #{location,jdbcType=VARCHAR}, #{salary,jdbcType=INTEGER}, 
      #{descr,jdbcType=VARCHAR}, #{deadline,jdbcType=DATE}, #{status,jdbcType=INTEGER}, 
      #{feedback,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.wzu.job.bean.Job">
    insert into job
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="jobId != null">
        job_id,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="jobName != null">
        job_name,
      </if>
      <if test="pubTime != null">
        pub_time,
      </if>
      <if test="location != null">
        location,
      </if>
      <if test="salary != null">
        salary,
      </if>
      <if test="descr != null">
        descr,
      </if>
      <if test="deadline != null">
        deadline,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="feedback != null">
        feedback,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="jobId != null">
        #{jobId,jdbcType=INTEGER},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="jobName != null">
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="pubTime != null">
        #{pubTime,jdbcType=TIMESTAMP},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="salary != null">
        #{salary,jdbcType=INTEGER},
      </if>
      <if test="descr != null">
        #{descr,jdbcType=VARCHAR},
      </if>
      <if test="deadline != null">
        #{deadline,jdbcType=DATE},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="feedback != null">
        #{feedback,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wzu.job.bean.JobExample" resultType="java.lang.Long">
    select count(*) from job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update job
    <set>
      <if test="record.jobId != null">
        job_id = #{record.jobId,jdbcType=INTEGER},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=INTEGER},
      </if>
      <if test="record.jobName != null">
        job_name = #{record.jobName,jdbcType=VARCHAR},
      </if>
      <if test="record.pubTime != null">
        pub_time = #{record.pubTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.location != null">
        location = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.salary != null">
        salary = #{record.salary,jdbcType=INTEGER},
      </if>
      <if test="record.descr != null">
        descr = #{record.descr,jdbcType=VARCHAR},
      </if>
      <if test="record.deadline != null">
        deadline = #{record.deadline,jdbcType=DATE},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.feedback != null">
        feedback = #{record.feedback,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update job
    set job_id = #{record.jobId,jdbcType=INTEGER},
      company_id = #{record.companyId,jdbcType=INTEGER},
      job_name = #{record.jobName,jdbcType=VARCHAR},
      pub_time = #{record.pubTime,jdbcType=TIMESTAMP},
      location = #{record.location,jdbcType=VARCHAR},
      salary = #{record.salary,jdbcType=INTEGER},
      descr = #{record.descr,jdbcType=VARCHAR},
      deadline = #{record.deadline,jdbcType=DATE},
      status = #{record.status,jdbcType=INTEGER},
      feedback = #{record.feedback,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wzu.job.bean.Job">
    update job
    <set>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="jobName != null">
        job_name = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="pubTime != null">
        pub_time = #{pubTime,jdbcType=TIMESTAMP},
      </if>
      <if test="location != null">
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="salary != null">
        salary = #{salary,jdbcType=INTEGER},
      </if>
      <if test="descr != null">
        descr = #{descr,jdbcType=VARCHAR},
      </if>
      <if test="deadline != null">
        deadline = #{deadline,jdbcType=DATE},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="feedback != null">
        feedback = #{feedback,jdbcType=VARCHAR},
      </if>
    </set>
    where job_id = #{jobId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wzu.job.bean.Job">
    update job
    set company_id = #{companyId,jdbcType=INTEGER},
      job_name = #{jobName,jdbcType=VARCHAR},
      pub_time = #{pubTime,jdbcType=TIMESTAMP},
      location = #{location,jdbcType=VARCHAR},
      salary = #{salary,jdbcType=INTEGER},
      descr = #{descr,jdbcType=VARCHAR},
      deadline = #{deadline,jdbcType=DATE},
      status = #{status,jdbcType=INTEGER},
      feedback = #{feedback,jdbcType=VARCHAR}
    where job_id = #{jobId,jdbcType=INTEGER}
  </update>
</mapper>