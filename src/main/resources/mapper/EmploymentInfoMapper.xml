<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wzu.job.dao.EmploymentInfoMapper">
  <resultMap id="BaseResultMap" type="com.wzu.job.bean.EmploymentInfo">
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="salary" jdbcType="INTEGER" property="salary" />
    <result column="job" jdbcType="VARCHAR" property="job" />
    <result column="company_name" jdbcType="VARCHAR" property="companyName" />
    <result column="expected" jdbcType="VARCHAR" property="expected" />
    <result column="photo" jdbcType="VARCHAR" property="photo" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="feedback" jdbcType="VARCHAR" property="feedback" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, location, salary, job, company_name, expected, photo, status, feedback
  </sql>
  <select id="selectByExample" parameterType="com.wzu.job.bean.EmploymentInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employment_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.wzu.job.bean.EmploymentInfoExample">
    delete from employment_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wzu.job.bean.EmploymentInfo">
    insert into employment_info (user_id, location, salary, 
      job, company_name, expected, 
      photo, status, feedback
      )
    values (#{userId,jdbcType=INTEGER}, #{location,jdbcType=VARCHAR}, #{salary,jdbcType=INTEGER}, 
      #{job,jdbcType=VARCHAR}, #{companyName,jdbcType=VARCHAR}, #{expected,jdbcType=VARCHAR}, 
      #{photo,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{feedback,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.wzu.job.bean.EmploymentInfo">
    insert into employment_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="location != null">
        location,
      </if>
      <if test="salary != null">
        salary,
      </if>
      <if test="job != null">
        job,
      </if>
      <if test="companyName != null">
        company_name,
      </if>
      <if test="expected != null">
        expected,
      </if>
      <if test="photo != null">
        photo,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="feedback != null">
        feedback,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="salary != null">
        #{salary,jdbcType=INTEGER},
      </if>
      <if test="job != null">
        #{job,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null">
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="expected != null">
        #{expected,jdbcType=VARCHAR},
      </if>
      <if test="photo != null">
        #{photo,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="feedback != null">
        #{feedback,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wzu.job.bean.EmploymentInfoExample" resultType="java.lang.Long">
    select count(*) from employment_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update employment_info
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.location != null">
        location = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.salary != null">
        salary = #{record.salary,jdbcType=INTEGER},
      </if>
      <if test="record.job != null">
        job = #{record.job,jdbcType=VARCHAR},
      </if>
      <if test="record.companyName != null">
        company_name = #{record.companyName,jdbcType=VARCHAR},
      </if>
      <if test="record.expected != null">
        expected = #{record.expected,jdbcType=VARCHAR},
      </if>
      <if test="record.photo != null">
        photo = #{record.photo,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.feedback != null">
        feedback = #{record.feedback,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update employment_info
    set user_id = #{record.userId,jdbcType=INTEGER},
      location = #{record.location,jdbcType=VARCHAR},
      salary = #{record.salary,jdbcType=INTEGER},
      job = #{record.job,jdbcType=VARCHAR},
      company_name = #{record.companyName,jdbcType=VARCHAR},
      expected = #{record.expected,jdbcType=VARCHAR},
      photo = #{record.photo,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      feedback = #{record.feedback,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>